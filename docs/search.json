<<<<<<< HEAD
[{},{"path":"index.html","id":"overview","chapter":"1 Overview","heading":"1 Overview","text":"sessions intended enable perform additional data analysis techniques appropriately confidently using R Python.Ongoing formative assessment exercisesOngoing formative assessment exercisesNo formal assessmentNo formal assessmentNo mathematical derivationsNo mathematical derivationsNo pen paper calculationsNo pen paper calculationsThey “mindlessly use stats program” course!","code":""},{"path":"index.html","id":"core-aims","chapter":"1 Overview","heading":"1.1 Core aims","text":"know presented non-standard dataset e.g.Know deal non-normal dataKnow analyse count dataBe able deal random effects","code":""},{"path":"index.html","id":"core-topics","chapter":"1 Overview","heading":"1.2 Core topics","text":"Generalised linear models","code":""},{"path":"index.html","id":"index-datasets","chapter":"1 Overview","heading":"1.3 Datasets","text":"course uses various data sets. easiest way accessing creating R-project RStudio. download data folder right-clicking link Save …. Next unzip file copy working directory. data accessible via <working-directory-name>/data..panelset{--panel-tab-font-family: inherit;}","code":"## Warning: 'xaringanExtra::style_panelset' is deprecated.\n## Use 'style_panelset_tabs' instead.\n## See help(\"Deprecated\")"},{},{"path":"kmeans.html","id":"kmeans","chapter":"2 K-means clustering","heading":"2 K-means clustering","text":"","code":""},{"path":"kmeans.html","id":"objectives","chapter":"2 K-means clustering","heading":"2.1 Objectives","text":"Objectives","code":""},{"path":"kmeans.html","id":"libraries-and-functions","chapter":"2 K-means clustering","heading":"2.2 Libraries and functions","text":"tidyversebase R","code":""},{"path":"kmeans.html","id":"workflow","chapter":"2 K-means clustering","heading":"2.3 Workflow","text":"K-means clustering iterative process. follows following steps:Select number clusters identify (e.g. K = 3)Create centroidsPlace centroids randomly dataAssign data point closest centroidCalculate centroid new clusterRepeat steps 4-5 clusters change","code":""},{"path":"kmeans.html","id":"data","chapter":"2 K-means clustering","heading":"2.4 Data","text":"First need data! liven things bit, ’ll using data modeldata package. package whole bunch interesting datasets us look . ’ll using penguins dataset illustrate K-means clustering, ’ve highlighted data sets can try .penguinsAlzheimer’s","code":"\n# attach the data\ndata(\"penguins\")\n# attach the data\ndata(\"ad_data\")"},{"path":"kmeans.html","id":"visualise-the-data","chapter":"2 K-means clustering","heading":"2.5 Visualise the data","text":"First , let’s look data. always good idea get sense data.tidyversebase RSo different types penguins, different islands. Bill flipper measurements taken, penguins’ weight plus sex recorded.let’s look flipper length versus bill length, example.tidyversebase RWe can already see data appear cluster quite closely species. great example illustrate K-means clustering (’d almost think chose example purpose!)","code":"\npenguins## # A tibble: 344 × 7\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           NA            NA                  NA          NA\n##  5 Adelie  Torgersen           36.7          19.3               193        3450\n##  6 Adelie  Torgersen           39.3          20.6               190        3650\n##  7 Adelie  Torgersen           38.9          17.8               181        3625\n##  8 Adelie  Torgersen           39.2          19.6               195        4675\n##  9 Adelie  Torgersen           34.1          18.1               193        3475\n## 10 Adelie  Torgersen           42            20.2               190        4250\n## # … with 334 more rows, and 1 more variable: sex <fct>\nhead(penguins)## # A tibble: 6 × 7\n##   species island bill_length_mm bill_depth_mm flipper_length_… body_mass_g sex  \n##   <fct>   <fct>           <dbl>         <dbl>            <int>       <int> <fct>\n## 1 Adelie  Torge…           39.1          18.7              181        3750 male \n## 2 Adelie  Torge…           39.5          17.4              186        3800 fema…\n## 3 Adelie  Torge…           40.3          18                195        3250 fema…\n## 4 Adelie  Torge…           NA            NA                 NA          NA <NA> \n## 5 Adelie  Torge…           36.7          19.3              193        3450 fema…\n## 6 Adelie  Torge…           39.3          20.6              190        3650 male\nggplot(penguins, aes(x = flipper_length_mm,\n                     y = bill_length_mm,\n                     colour = species)) +\n  geom_point()\nplot(penguins$flipper_length_mm,  # scatter plot\n     penguins$bill_length_mm,\n     pch = 20,\n     col = penguins$species)      # colour by species\n\n\nlegend(\"bottomright\",             # legend\n       legend = levels(penguins$species),\n       pch = 20,\n       col = factor(levels(penguins$species)))"},{"path":"kmeans.html","id":"clustering","chapter":"2 K-means clustering","heading":"2.6 Clustering","text":"Next, ’ll actual clustering.tidyverse\nclustering, ’ll using kmeans() function. function requires numeric data input.Note output list vectors, differing lengths. ’s contain different types information:cluster contains information pointcenters, withinss, size contain information clustertotss, tot.withinss, betweenss, iter contain information full clusteringbase R\nclustering, ’ll using kmeans() function. function requires numeric data input.Note output list vectors, differing lengths. ’s contain different types information:cluster contains information pointcenters, withinss, size contain information clustertotss, tot.withinss, betweenss, iter contain information full clustering","code":"\npoints <- penguins %>% \n  select(flipper_length_mm,      # select data\n         bill_length_mm) %>% \n  drop_na()                      # remove missing values\n\nkclust <- kmeans(points,         # perform k-means clustering\n                   centers = 3)  # using 3 centers\n\nsummary(kclust)                  # summarise output##              Length Class  Mode   \n## cluster      342    -none- numeric\n## centers        6    -none- numeric\n## totss          1    -none- numeric\n## withinss       3    -none- numeric\n## tot.withinss   1    -none- numeric\n## betweenss      1    -none- numeric\n## size           3    -none- numeric\n## iter           1    -none- numeric\n## ifault         1    -none- numeric\npoints_r <-\n  data.frame(\n    penguins$flipper_length_mm,  # get numeric data\n    penguins$bill_length_mm) |>  # use base R pipe!\n  na.omit()                      # remove missing data\n\nkclust_r <-\n  kmeans(points_r,               # perform k-means clustering\n         centers = 3)            # using 3 centers\n\nsummary(kclust_r)                # summarise output##              Length Class  Mode   \n## cluster      342    -none- numeric\n## centers        6    -none- numeric\n## totss          1    -none- numeric\n## withinss       3    -none- numeric\n## tot.withinss   1    -none- numeric\n## betweenss      1    -none- numeric\n## size           3    -none- numeric\n## iter           1    -none- numeric\n## ifault         1    -none- numeric"},{"path":"kmeans.html","id":"visualise-clusters","chapter":"2 K-means clustering","heading":"2.7 Visualise clusters","text":"can visualise clusters calculated .tidyverse\nperformed clustering, centers calculated. values give (x, y) coordinates centroids.initial centroids get randomly placed data. , combined iterative nature process, means values see going slightly different values . ’s normal!Next, want visualise data points belong cluster. can follows:base R\nperformed clustering, centers calculated. values give (x, y) coordinates centroids.initial centroids get randomly placed data. , combined iterative nature process, means values see going slightly different values . ’s normal!Next, want visualise data points belong cluster. can follows:","code":"\ntidy_clust <- tidy(kclust) # get centroid coordinates\n\ntidy_clust## # A tibble: 3 × 5\n##   flipper_length_mm bill_length_mm  size withinss cluster\n##               <dbl>          <dbl> <int>    <dbl> <fct>  \n## 1              197.           46.0    93    3932. 1      \n## 2              187.           38.4   120    3494. 2      \n## 3              217.           47.6   129    6658. 3\nkclust %>%                              # take clustering data\n  augment(points) %>%                   # combine with original data\n  ggplot(aes(x = flipper_length_mm,     # plot the original data\n             y = bill_length_mm)) +\n  geom_point(aes(colour = .cluster)) +  # colour by classification\n  geom_point(data = tidy_clust,\n             size = 7, shape = \"x\")     # add the cluster centers\nkclust_r$centers  # get centroid coordinates##   penguins.flipper_length_mm penguins.bill_length_mm\n## 1                   196.7312                45.95484\n## 2                   186.9917                38.42750\n## 3                   216.8837                47.56744\nplot(points_r,                # plot original data\n     col = kclust_r$cluster,  # colour by cluster\n     pch = 20)\n\npoints(kclust_r$centers,      # add cluster centers\n       pch = 4,\n       lwd = 3)"},{"path":"kmeans.html","id":"optimising-cluster-number","chapter":"2 K-means clustering","heading":"2.8 Optimising cluster number","text":"example set number clusters 3. made sense, data already visually separated roughly three groups - one species.However, might cluster number choose lot less obvious. case helpful explore clustering data range clusters.tidyversebase RFrom exploration can see three clusters optimal scenario.","code":"\n#tidy explore\n#baseR explore"},{"path":"kmeans.html","id":"exercise","chapter":"2 K-means clustering","heading":"2.9 Exercise","text":"Exercise 2.1  can add exercises","code":""},{"path":"kmeans.html","id":"key-points","chapter":"2 K-means clustering","heading":"2.10 Key points","text":"Adding key points","code":""}]
=======
[{},{"path":"index.html","id":"overview","chapter":"1 Overview","heading":"1 Overview","text":"sessions intended enable perform additional data analysis techniques appropriately confidently using R Python.Ongoing formative assessment exercisesOngoing formative assessment exercisesNo formal assessmentNo formal assessmentNo mathematical derivationsNo mathematical derivationsNo pen paper calculationsNo pen paper calculationsThey “mindlessly use stats program” course!","code":""},{"path":"index.html","id":"core-aims","chapter":"1 Overview","heading":"1.1 Core aims","text":"know presented non-standard dataset e.g.Know deal non-normal dataKnow analyse count dataBe able deal random effects","code":""},{"path":"index.html","id":"core-topics","chapter":"1 Overview","heading":"1.2 Core topics","text":"Generalised linear models","code":""},{"path":"index.html","id":"index-datasets","chapter":"1 Overview","heading":"1.3 Datasets","text":"course uses various data sets. easiest way accessing creating R-project RStudio. download data folder right-clicking link Save …. Next unzip file copy working directory. data accessible via <working-directory-name>/data..panelset{--panel-tab-font-family: inherit;}","code":"## Warning: 'xaringanExtra::style_panelset' is deprecated.\n## Use 'style_panelset_tabs' instead.\n## See help(\"Deprecated\")"},{},{"path":"kmeans.html","id":"kmeans","chapter":"2 K-means clustering","heading":"2 K-means clustering","text":"","code":""},{"path":"kmeans.html","id":"objectives","chapter":"2 K-means clustering","heading":"2.1 Objectives","text":"Objectives","code":""},{"path":"kmeans.html","id":"libraries-and-functions","chapter":"2 K-means clustering","heading":"2.2 Libraries and functions","text":"tidyversebase R","code":""},{"path":"kmeans.html","id":"workflow","chapter":"2 K-means clustering","heading":"2.3 Workflow","text":"K-means clustering iterative process. follows following steps:Select number clusters identify (e.g. K = 3)Create centroidsPlace centroids randomly dataAssign data point closest centroidCalculate centroid new clusterRepeat steps 4-5 clusters change","code":""},{"path":"kmeans.html","id":"data","chapter":"2 K-means clustering","heading":"2.4 Data","text":"First need data! liven things bit, ’ll using data modeldata package. package whole bunch interesting datasets us look . ’ll using penguins dataset illustrate K-means clustering, ’ve highlighted data sets can try .penguinsAlzheimer’s","code":"\n# attach the data\ndata(\"penguins\")\n# attach the data\ndata(\"ad_data\")"},{"path":"kmeans.html","id":"visualise-the-data","chapter":"2 K-means clustering","heading":"2.5 Visualise the data","text":"First , let’s look data. always good idea get sense data.tidyversebase RSo different types penguins, different islands. Bill flipper measurements taken, penguins’ weight plus sex recorded.let’s look flipper length versus bill length, example.tidyversebase RWe can already see data appear cluster quite closely species. great example illustrate K-means clustering (’d almost think chose example purpose!)","code":"\npenguins## # A tibble: 344 × 7\n##    species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n##    <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n##  1 Adelie  Torgersen           39.1          18.7               181        3750\n##  2 Adelie  Torgersen           39.5          17.4               186        3800\n##  3 Adelie  Torgersen           40.3          18                 195        3250\n##  4 Adelie  Torgersen           NA            NA                  NA          NA\n##  5 Adelie  Torgersen           36.7          19.3               193        3450\n##  6 Adelie  Torgersen           39.3          20.6               190        3650\n##  7 Adelie  Torgersen           38.9          17.8               181        3625\n##  8 Adelie  Torgersen           39.2          19.6               195        4675\n##  9 Adelie  Torgersen           34.1          18.1               193        3475\n## 10 Adelie  Torgersen           42            20.2               190        4250\n## # … with 334 more rows, and 1 more variable: sex <fct>\nhead(penguins)## # A tibble: 6 × 7\n##   species island bill_length_mm bill_depth_mm flipper_length_… body_mass_g sex  \n##   <fct>   <fct>           <dbl>         <dbl>            <int>       <int> <fct>\n## 1 Adelie  Torge…           39.1          18.7              181        3750 male \n## 2 Adelie  Torge…           39.5          17.4              186        3800 fema…\n## 3 Adelie  Torge…           40.3          18                195        3250 fema…\n## 4 Adelie  Torge…           NA            NA                 NA          NA <NA> \n## 5 Adelie  Torge…           36.7          19.3              193        3450 fema…\n## 6 Adelie  Torge…           39.3          20.6              190        3650 male\nggplot(penguins, aes(x = flipper_length_mm,\n                     y = bill_length_mm,\n                     colour = species)) +\n  geom_point()\n# scatter plot\nplot(penguins$flipper_length_mm,\n     penguins$bill_length_mm,\n     pch = 20,\n     col = penguins$species)\n\n# legend\nlegend(\"bottomright\",\n       legend = levels(penguins$species),\n       pch = 20,\n       col = factor(levels(penguins$species)))"},{"path":"kmeans.html","id":"clustering","chapter":"2 K-means clustering","heading":"2.6 Clustering","text":"Next, ’ll actual clustering.tidyverse\nclustering, ’ll using kmeans() function. function requires numeric data input.Note output list vectors, differing lengths. ’s contain different types information:cluster contains information pointcenters, withinss, size contain information clustertotss, tot.withinss, betweenss, iter contain information full clusteringbase R\nclustering, ’ll using kmeans() function. function requires numeric data input.Note output list vectors, differing lengths. ’s contain different types information:cluster contains information pointcenters, withinss, size contain information clustertotss, tot.withinss, betweenss, iter contain information full clustering","code":"\npoints <- penguins %>% \n  select(flipper_length_mm,      # select data\n         bill_length_mm) %>% \n  drop_na()                      # remove missing values\n\nkclust <- kmeans(points,         # perform k-means clustering\n                   centers = 3)  # using 3 centers\n\nsummary(kclust)                  # summarise output##              Length Class  Mode   \n## cluster      342    -none- numeric\n## centers        6    -none- numeric\n## totss          1    -none- numeric\n## withinss       3    -none- numeric\n## tot.withinss   1    -none- numeric\n## betweenss      1    -none- numeric\n## size           3    -none- numeric\n## iter           1    -none- numeric\n## ifault         1    -none- numeric\npoints_r <- data.frame(\n              penguins$flipper_length_mm,  # get numeric data\n              penguins$bill_length_mm) |>  # use base R pipe!\n              na.omit()                    # remove missing data\n\nkclust_r <- kmeans(points_r,               # perform k-means clustering\n                   centers = 3)            # using 3 centers\n\nsummary(kclust_r)                          # summarise output##              Length Class  Mode   \n## cluster      342    -none- numeric\n## centers        6    -none- numeric\n## totss          1    -none- numeric\n## withinss       3    -none- numeric\n## tot.withinss   1    -none- numeric\n## betweenss      1    -none- numeric\n## size           3    -none- numeric\n## iter           1    -none- numeric\n## ifault         1    -none- numeric"},{"path":"kmeans.html","id":"visualise-clusters","chapter":"2 K-means clustering","heading":"2.7 Visualise clusters","text":"can visualise clusters calculated .tidyverse\nperformed clustering, centers calculated. values give (x, y) coordinates centroids.initial centroids get randomly placed data. , combined iterative nature process, means values see going slightly different values . ’s normal!Next, want visualise data points belong cluster. can follows:base R\nperformed clustering, centers calculated. values give (x, y) coordinates centroids.initial centroids get randomly placed data. , combined iterative nature process, means values see going slightly different values . ’s normal!Next, want visualise data points belong cluster. can follows:","code":"\ntidy_clust <- tidy(kclust) # get centroid coordinates\n\ntidy_clust## # A tibble: 3 × 5\n##   flipper_length_mm bill_length_mm  size withinss cluster\n##               <dbl>          <dbl> <int>    <dbl> <fct>  \n## 1              187.           38.4   120    3494. 1      \n## 2              217.           47.6   129    6658. 2      \n## 3              197.           46.0    93    3932. 3\nkclust %>%                              # take clustering data\n  augment(points) %>%                   # combine with original data\n  ggplot(aes(x = flipper_length_mm,     # plot the original data\n             y = bill_length_mm)) +\n  geom_point(aes(colour = .cluster)) +  # colour by classification\n  geom_point(data = tidy_clust,\n             size = 7, shape = \"x\")     # add the cluster centers\nkclust_r$centers  # get centroid coordinates##   penguins.flipper_length_mm penguins.bill_length_mm\n## 1                   196.7312                45.95484\n## 2                   186.9917                38.42750\n## 3                   216.8837                47.56744\nplot(points_r,                # plot original data\n     col = kclust_r$cluster,  # colour by cluster\n     pch = 20)\n\npoints(kclust_r$centers,      # add cluster centers\n       pch = 4,\n       lwd = 3)"},{"path":"kmeans.html","id":"optimising-cluster-number","chapter":"2 K-means clustering","heading":"2.8 Optimising cluster number","text":"example set number clusters 3. made sense, data already visually separated roughly three groups - one species.However, might cluster number choose lot less obvious. case helpful explore clustering data range clusters.tidyversebase RFrom exploration can see three clusters optimal scenario.","code":"\n#tidy explore\n#baseR explore"},{"path":"kmeans.html","id":"exercise","chapter":"2 K-means clustering","heading":"2.9 Exercise","text":"Exercise 2.1  can add exercises","code":""},{"path":"kmeans.html","id":"key-points","chapter":"2 K-means clustering","heading":"2.10 Key points","text":"Adding key points","code":""}]
>>>>>>> b22398e385062f343f1bcb4b717c505a984a4490
